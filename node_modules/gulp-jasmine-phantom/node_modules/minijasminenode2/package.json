{
  "_args": [
    [
      "minijasminenode2@git+https://github.com/dflynn15/minijasminenode.git",
      "E:\\Elbrus\\node_modules\\gulp-jasmine-phantom"
    ]
  ],
  "_from": "git+https://github.com/dflynn15/minijasminenode.git",
  "_id": "minijasminenode2@1.0.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/gulp-jasmine-phantom/minijasminenode2",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/dflynn15/minijasminenode/master/package.json",
      "gitUrl": "git://github.com/dflynn15/minijasminenode.git",
      "httpsUrl": "git+https://github.com/dflynn15/minijasminenode.git",
      "shortcut": "github:dflynn15/minijasminenode",
      "ssh": "git@github.com:dflynn15/minijasminenode.git",
      "sshUrl": "git+ssh://git@github.com/dflynn15/minijasminenode.git",
      "type": "github"
    },
    "name": "minijasminenode2",
    "raw": "minijasminenode2@git+https://github.com/dflynn15/minijasminenode.git",
    "rawSpec": "git+https://github.com/dflynn15/minijasminenode.git",
    "scope": null,
    "spec": "git+https://github.com/dflynn15/minijasminenode.git",
    "type": "hosted"
  },
  "_requiredBy": [
    "/gulp-jasmine-phantom"
  ],
  "_resolved": "git+https://github.com/dflynn15/minijasminenode.git#a001e549b8b141a7562a7ea21dec9a1df96f2527",
  "_shasum": "135a56bebb931f3b6e0fce780913731799bf7802",
  "_shrinkwrap": null,
  "_spec": "minijasminenode2@git+https://github.com/dflynn15/minijasminenode.git",
  "_where": "E:\\Elbrus\\node_modules\\gulp-jasmine-phantom",
  "author": {
    "email": "ju.ralph@gmail.com",
    "name": "Julie Ralph"
  },
  "bin": {
    "minijasminenode2": "bin/minijn"
  },
  "bugs": {
    "url": "https://github.com/juliemr/minijasminenode/issues"
  },
  "dependencies": {
    "jasmine-core": "2.0.0"
  },
  "description": "Super simple wrapper around Jasmine 2 for Node",
  "devDependencies": {},
  "gitHead": "a001e549b8b141a7562a7ea21dec9a1df96f2527",
  "homepage": "https://github.com/juliemr/minijasminenode/tree/jasmine2",
  "keywords": [
    "bdd",
    "testing"
  ],
  "licenses": [
    "MIT"
  ],
  "main": "lib/index.js",
  "name": "minijasminenode2",
  "optionalDependencies": {},
  "readme": "minijasminenode2\r\n======\r\n\r\nBased on Jasmine-Node, but minus the fancy stuff.\r\nThis node.js module makes Pivotal Lab's Jasmine\r\n(http://github.com/pivotal/jasmine) spec framework available in\r\nnode.js or via the command line.\r\n\r\nversion notice\r\n--------------\r\n\r\nminijasminenode comes in two flavors.\r\n\r\n - minijasminenode runs [Jasmine 1.3](http://jasmine.github.io/1.3/introduction.html)\r\n - minijasminenode2 runs [Jasmine 2.0](http://jasmine.github.io/2.0/introduction.html)\r\n\r\nThis is the branch for minijasminenode2. [Switch to minijasminenode](https://github.com/juliemr/minijasminenode/tree/jasmine1).\r\n\r\nNote that there have been breaking changes between Jasmine 1.3.1 and Jasmine 2.0.\r\nNotably, a different interface for reporters and custom matchers. Also, note that\r\nper-spec timeouts (e.g. `it('does foo', fn, 1000))` no longer work in Jasmine 2.0.\r\n\r\nfeatures\r\n--------\r\n\r\nMiniJasmineNode exports a library which\r\n- places Jasmine in Node's global namespace, similar to how it's run in a browser.\r\n- adds result reporters for the terminal.\r\n- adds the ability to load tests from file.\r\n- adds focused specs with `iit` and `ddescribe`.\r\n\r\nThe module also contains a command line wrapper.\r\n\r\ninstallation\r\n------------\r\n\r\nGet the library with\r\n\r\n    npm install minijasminenode2\r\n\r\nOr, install globally\r\n\r\n    npm install -g minijasminenode2\r\n\r\nIf you install globally, you can use minijasminenode directly from the command line\r\n\r\n    minijasminenode2 mySpecFolder/mySpec.js\r\n\r\nSee more options\r\n\r\n    minijasminenode2 --help\r\n\r\nusage\r\n-----\r\n```javascript\r\n// Your test file - mySpecFolder/mySpec.js\r\ndescribe('foo', function() {\r\n  it('should pass', function() {\r\n    expect(2 + 2).toEqual(4);\r\n  });\r\n});\r\n```\r\n\r\n\r\n```javascript\r\n    var miniJasmineLib = require('minijasminenode2');\r\n    // At this point, jasmine is available in the global node context.\r\n\r\n    // Add your tests by filename.\r\n    miniJasmineLib.addSpecs('myTestFolder/mySpec.js');\r\n\r\n    // If you'd like to add a custom Jasmine reporter, you can do so. Tests will\r\n    // be automatically reported to the terminal.\r\n    miniJasmineLib.addReporter(myCustomReporter);\r\n\r\n    // Run those tests!\r\n    miniJasmineLib.executeSpecs(options);\r\n```\r\n\r\nIf you want a custom runner instead of the default add it as an option into `executeSpecs`\r\n```javascript\r\n    var miniJasmineLib = require('minijasminenode2');\r\n    var myCustomReporter = require('myCustomReporter');\r\n    // At this point, jasmine is available in the global node context.\r\n\r\n    // Add your tests by filename.\r\n    miniJasmineLib.addSpecs('myTestFolder/mySpec.js');\r\n\r\n    // Run those tests!\r\n    miniJasmineLib.executeSpecs({\r\n      reporter: myCustomReporter\r\n    });\r\n```\r\nYou can also pass an options object into `executeSpecs`\r\n\r\n````javascript\r\n    var miniJasmineLib = require('minijasminenode2');\r\n\r\n    var options = {\r\n      // An array of filenames, relative to current dir. These will be\r\n      // executed, as well as any tests added with addSpecs()\r\n      specs: ['specDir/mySpec1.js', 'specDir/mySpec2.js'],\r\n      // A function to call on completion.\r\n      // function(passed)\r\n      onComplete: function(passed) { console.log('done!'); },\r\n      // If true, display suite and spec names.\r\n      isVerbose: false,\r\n      // If true, print colors to the terminal.\r\n      showColors: true,\r\n      // If true, include stack traces in failures.\r\n      includeStackTrace: true,\r\n      // Time to wait in milliseconds before a test automatically fails\r\n      defaultTimeoutInterval: 5000\r\n    };\r\n    miniJasmineLib.executeSpecs(options);\r\n````\r\n\r\n\r\nto run the tests\r\n----------------\r\n`./specs.sh`\r\n\r\nThis will run passing tests as well as show examples of how failures look. To run only passing tests, use `npm test` or `./bin/minijn spec/*_spec.js`\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/juliemr/minijasminenode.git"
  },
  "scripts": {
    "test": "node lib/cli.js spec/*_spec.js"
  },
  "version": "1.0.0"
}
